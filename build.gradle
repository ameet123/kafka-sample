buildscript {
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/libs-release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.4.RELEASE")
        classpath 'com.github.jacobono:gradle-jaxb-plugin:1.3.5'
        classpath 'org.jsonschema2pojo:jsonschema2pojo-gradle-plugin:0.4.37'
    }
}

plugins {
    id 'org.springframework.boot' version '1.5.4.RELEASE'
}

group 'org.ameet'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'
apply plugin: 'com.github.jacobono.jaxb'
apply plugin: 'jsonschema2pojo'
apply plugin: 'project-report'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    version = '0.1.5'
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/libs-release" }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile group: 'org.springframework.kafka', name: 'spring-kafka', version: '1.2.1.RELEASE'
    compile group: 'com.google.guava', name: 'guava', version: '22.0'

    compile group: 'io.reactivex', name: 'rxjava', version: '1.3.0'

    // for JPA
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'mysql:mysql-connector-java'

    // for rest over jpa
    compile("org.springframework.boot:spring-boot-starter-data-rest")

    // for xjc
    jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7-b41'
    jaxb 'com.sun.xml.bind:jaxb-impl:2.2.7-b41'
    jaxb 'javax.xml.bind:jaxb-api:2.2.7'

    // for json2pojo
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

jaxb {
    System.setProperty('javax.xml.accessExternalSchema', 'all')
    xsdDir = "src/main/resources/schema"
    xjc {
        generatePackage = "org.ameet.kafkasample.model.ihg.reservation"
        bindingsDir = "src/main/resources/schema/bindings"
        bindings = ["reserv.xjb"]
    }
}

jsonSchema2Pojo {
    // Location of the JSON Schema file(s). This may refer to a single file or a directory of files.
    source = files("src/main/resources/json")

    // Target directory for generated Java source files. The plugin will add this directory to the
    // java source set so the compiler will find and compile the newly generated source files.
    targetDirectory = file("src/main/java")

    // Package name used for generated Java classes (for types where a fully qualified name has not
    // been supplied in the schema using the 'javaType' property).
    targetPackage = 'org.ameet.kafkasample.model.ihg.json'

    // The type of input documents that will be read. Supported values:
    //  - jsonschema (schema documents, containing formal rules that describe the structure of json data)
    //  - json (documents that represent an example of the kind of json data that the generated Java types
    //          will be mapped to)
    sourceType = 'json'
    useCommonsLang3 = true
}

